// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence5Dot0;

namespace Persistence5Dot0.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            AccountId = new Guid("cea2d9ce-d815-44fe-9763-98634bdd1388"),
                            AccountType = "网易",
                            DateCreated = new DateTime(2021, 11, 18, 15, 34, 20, 74, DateTimeKind.Local).AddTicks(4031),
                            OwnerId = new Guid("efd9b8e4-b759-434d-bda1-21d268531fb3")
                        },
                        new
                        {
                            AccountId = new Guid("4c605048-2faf-4cad-99e2-715201ee8b33"),
                            AccountType = "腾讯",
                            DateCreated = new DateTime(2021, 11, 18, 15, 34, 20, 74, DateTimeKind.Local).AddTicks(4867),
                            OwnerId = new Guid("efd9b8e4-b759-434d-bda1-21d268531fb3")
                        },
                        new
                        {
                            AccountId = new Guid("bdeba495-e02a-416f-a462-126b353ec8b6"),
                            AccountType = "京东",
                            DateCreated = new DateTime(2021, 11, 18, 15, 34, 20, 74, DateTimeKind.Local).AddTicks(4880),
                            OwnerId = new Guid("e8253d32-603a-45c3-8d7b-48b2971b20e5")
                        },
                        new
                        {
                            AccountId = new Guid("dbfa3622-8150-4730-b4e9-321cfa4d79c7"),
                            AccountType = "CSDN",
                            DateCreated = new DateTime(2021, 11, 18, 15, 34, 20, 74, DateTimeKind.Local).AddTicks(4886),
                            OwnerId = new Guid("54aeb677-a1fc-479f-b095-98476a027e6d")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Owner", b =>
                {
                    b.Property<Guid>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("OwnerId");

                    b.ToTable("Owner");

                    b.HasData(
                        new
                        {
                            OwnerId = new Guid("efd9b8e4-b759-434d-bda1-21d268531fb3"),
                            Address = "河南",
                            DateOfBirth = new DateTime(1999, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Name1"
                        },
                        new
                        {
                            OwnerId = new Guid("be24d142-c750-4cee-90eb-2b99d942b33c"),
                            Address = "河北",
                            DateOfBirth = new DateTime(1990, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Name2"
                        },
                        new
                        {
                            OwnerId = new Guid("e8253d32-603a-45c3-8d7b-48b2971b20e5"),
                            Address = "湖南",
                            DateOfBirth = new DateTime(1992, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Name3"
                        },
                        new
                        {
                            OwnerId = new Guid("54aeb677-a1fc-479f-b095-98476a027e6d"),
                            Address = "湖北",
                            DateOfBirth = new DateTime(1991, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Name4"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.HasOne("Domain.Entities.Owner", null)
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
