// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence5Dot0;

namespace Persistence5Dot0.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20211117053943_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            AccountId = new Guid("d7ddc108-6b05-4a59-b1c2-7a7b5bc8c1cb"),
                            AccountType = "网易",
                            DateCreated = new DateTime(2021, 11, 17, 13, 39, 43, 431, DateTimeKind.Local).AddTicks(3446),
                            OwnerId = new Guid("efd9b8e4-b759-434d-bda1-21d268531fb3")
                        },
                        new
                        {
                            AccountId = new Guid("92352da2-6f82-4ae3-80b5-596b80d70b91"),
                            AccountType = "腾讯",
                            DateCreated = new DateTime(2021, 11, 17, 13, 39, 43, 431, DateTimeKind.Local).AddTicks(5785),
                            OwnerId = new Guid("be24d142-c750-4cee-90eb-2b99d942b33c")
                        },
                        new
                        {
                            AccountId = new Guid("89676aed-dcf6-4b99-a3fc-b2c3134945f3"),
                            AccountType = "京东",
                            DateCreated = new DateTime(2021, 11, 17, 13, 39, 43, 431, DateTimeKind.Local).AddTicks(5848),
                            OwnerId = new Guid("e8253d32-603a-45c3-8d7b-48b2971b20e5")
                        },
                        new
                        {
                            AccountId = new Guid("44e257ca-d7a9-426b-a4eb-9d124cf45941"),
                            AccountType = "CSDN",
                            DateCreated = new DateTime(2021, 11, 17, 13, 39, 43, 431, DateTimeKind.Local).AddTicks(5853),
                            OwnerId = new Guid("54aeb677-a1fc-479f-b095-98476a027e6d")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Owner", b =>
                {
                    b.Property<Guid>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("OwnerId");

                    b.ToTable("Owner");

                    b.HasData(
                        new
                        {
                            OwnerId = new Guid("efd9b8e4-b759-434d-bda1-21d268531fb3"),
                            Address = "河南",
                            DateOfBirth = new DateTime(1999, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Name1"
                        },
                        new
                        {
                            OwnerId = new Guid("be24d142-c750-4cee-90eb-2b99d942b33c"),
                            Address = "河北",
                            DateOfBirth = new DateTime(1990, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Name2"
                        },
                        new
                        {
                            OwnerId = new Guid("e8253d32-603a-45c3-8d7b-48b2971b20e5"),
                            Address = "湖南",
                            DateOfBirth = new DateTime(1992, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Name3"
                        },
                        new
                        {
                            OwnerId = new Guid("54aeb677-a1fc-479f-b095-98476a027e6d"),
                            Address = "湖北",
                            DateOfBirth = new DateTime(1991, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Name4"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.HasOne("Domain.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Domain.Entities.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
